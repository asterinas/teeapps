// Copyright 2023 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package teeapps.params;

message BiClassifierEvalParams {
  string label_field_name = 1;
  string score_field_name = 2;
  int64 bucket_num = 3;
  int64 min_item_cnt_per_bucket = 4;
}

message BiClassifierEvalReport {
  message PrReport {
    // range: [0,1]
    double fpr = 1;
    // range: [0,1]
    double precision = 2;
    // range: [0,1]
    double recall = 3;
    // range: [0,1]
    double threshold = 4;
  }
  message SummaryReport {
    int32 total_samples = 1;
    int32 positive_samples = 2;
    int32 negative_samples = 3;
    // range: [0,1]
    double auc = 4;
    // range: [0,1]
    double ks = 5;
    // range: [0,1]
    double f1_score = 6;
  }
  message EquiBinReport {
    // score bin
    double start_value = 1;
    double end_value = 2;
    // positive sample num
    int32 positive = 3;
    // negative sample num
    int32 negative = 4;
    // total sample num
    int32 total = 5;
    // precision：TP/(TP+FP)
    double precision = 6;
    // recall：TP/(TP+FN)
    double recall = 7;
    // false positive rate: FP/(FP+TN)
    double fpr = 8;
    // F1：2*P*R/(P+R)
    double f1_score = 9;
    // lift
    double lift = 10;
    // distribution of positive sample
    double distribution_of_positive = 11;
    // distribution of negative sample
    double distribution_of_negative = 12;
    // cumulative_percent_of_positive
    double cumulative_percent_of_positive = 13;
    // cumulative_percent_of_negative
    double cumulative_percent_of_negative = 14;
    // total_cumulative_percent
    double total_cumulative_percent = 15;
    // KS: (cumulative_percent_of_positive -  cumulative_percent_of_negative)
    double ks = 16;
    // score avg
    double avg_score = 17;
  }

  SummaryReport summary_report = 1;
  repeated EquiBinReport equi_frequent_bin_report = 2;
  repeated EquiBinReport equi_range_bin_report = 3;
  // precision/recall when fpr in [0.001, 0.005, 0.01, 0.05, 0.1, 0.2]
  repeated PrReport head_report = 4;
}